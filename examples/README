
Proof-of-Concept Example
------------------------

a_1.c and a_2.c are two implementations which compute the same function (or do they?).
Their loops are not perfectly synchronised.

a_n.bc     is the bitcode generated by "clang -emit-llvm -O0 -c"
a_n_mr.bc  is the mem-2-reg optimised bitcode obtained from the above using "opt -mem2reg"
a_n.mr.ll  is the readable version of the above obtained by "llv-dis".

"process.sh" creates these files. Provide it with "a_1" or "a_2" as argument.

a_1.manual.smt2 is the manual translation of the llvm-program into a CHC. The "__mark" function is used as an indicator where the loop invariant should be placed.
This proof obligation is NOT relational but functional for the contract "pre: true; post: \result >= 0"

a_1.source.smt2 is the manual translation of the source a_1.c into CHC for the same property. 

Unfortunately, both smt files cannot be discharged by either Z3 or eldarica. ;(
