../../reve-test-suite/build/loop/while_after_while_if.smt2: (define-fun INV_MAIN_42 ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int)) Bool (and (and (and (= A D) (= B E)) (= C G)) (and (>= C 0) (>= F 1))))
../../reve-test-suite/build/loop/barthe2-big.smt2: (define-fun INV_MAIN_2 ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int)) Bool (or (or (and (and (and (= (- A D) (- 1)) (= B E)) (= (+ C (- D F)) 1)) (and (<= A B) (>= A 0))) (and (and (and (= A 0) (= B E)) (= C F)) (= D 1))) (and (= C F) (and (and (and (>= (- A B) 1) (>= A 0)) (>= (- D E) 1)) (>= D 1)))))
../../reve-test-suite/build/loop/simple-loop.smt2: (define-fun INV_MAIN_42 ((A Int) (B Int)) Bool (and (and (and (<= A 11) (>= A 0)) (<= B 11)) (>= B 1)))
../../reve-test-suite/build/loop/barthe2.smt2: (define-fun INV_MAIN_1 ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int)) Bool (or (or (and (and (and (= (- A D) (- 1)) (= B E)) (= (+ C (- D F)) 1)) (and (<= A B) (>= A 0))) (and (and (and (= A 0) (= B E)) (= C F)) (= D 1))) (and (= C F) (and (and (and (and (>= (+ A (- (- E D) B)) (- 1)) (>= (- A B) 1)) (>= A 0)) (>= (- D E) 1)) (>= D 1)))))
../../reve-test-suite/build/loop/break.smt2: (define-fun INV_MAIN_42 ((A Int) (B Int) (C Int) (D Int)) Bool (and (and (= (+ A C) 10) (= B D)) (>= A 0)))
../../reve-test-suite/build/loop/loop_unswitching.smt2: (define-fun INV_MAIN_42 ((A Int) (B Int) (C Int) (D Int) (E Int)) Bool (and (and (= A C) (= B E)) (and (>= B 0) (>= D 1))))
../../reve-test-suite/build/loop/barthe2-big2.smt2: (define-fun INV_MAIN_3 ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int)) Bool (and (and (= (+ A (- (- E D) B)) 0) (= C F)) (and (>= A 1) (>= D 1))))
../../reve-test-suite/build/loop/loop.smt2: (define-fun INV_MAIN_42 ((A Int) (B Int) (C Int) (D Int) (E Int)) Bool (and (and (= (+ A (- D C)) 0) (= B E)) (and (>= A 0) (>= B 0))))
../../reve-test-suite/build/loop/while-if.smt2: (define-fun INV_MAIN_42 ((A Int) (B Int) (C Int) (D Int) (E Int)) Bool (and (and (= A C) (= B E)) (and (>= B 0) (>= D 1))))
../../reve-test-suite/build/loop/loop2.smt2: (define-fun INV_MAIN_42 ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int)) Bool (and (and (= (+ A (- (- F D) C)) 1) (= B E)) (and (and (and (>= A 1) (>= B 0)) (>= C 1)) (>= D 0))))
../../reve-test-suite/build/loop/bug15.smt2: (define-fun INV_MAIN_42 ((A Int) (B Int)) Bool (= A B))
../../reve-test-suite/build/loop/digits10_inl.smt2: (define-fun INV_MAIN_42 ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int)) Bool (or (or (or (and (and (= B E) (= D 1)) (and (>= (+ (* (- 10) A) C) 0) (>= (- (* 10 A) C) (- 9)))) (and (and (and (= B F) (= D 0)) (= (- E F) (- 1))) (and (and (and (>= (+ (* (- 10) A) C) 0) (<= A 0)) (<= C 99)) (>= C 10)))) (and (and (and (= B F) (= D 0)) (= E F)) (and (and (>= (+ (* (- 10) A) C) 0) (>= (- (* 10 A) C) (- 9))) (<= A 0)))) (and (and (= B F) (= D 0)) (and (and (>= (+ (* (- 10) A) C) 0) (<= A 0)) (>= C 100)))))
../../reve-test-suite/build/loop/loop3.smt2: (define-fun INV_MAIN_42 ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int)) Bool (or (and (and (= (+ A (- (- E D) B)) (- 1)) (= C F)) (and (and (and (>= (- (+ B D) A) 2) (>= A 1)) (>= B 1)) (>= C 2))) (and (and (= (+ A (- (- E D) B)) 0) (= (- C F) (- 2))) (and (and (and (>= (- (+ B D) A) 1) (>= A B)) (>= B 1)) (>= C 0)))))
../../reve-test-suite/build/loop/upcount.smt2: (define-fun INV_MAIN_42 ((A Int) (B Int) (C Int) (D Int)) Bool (or (and (and (= (- A C) (- 1)) (= (- B D) 1)) (and (>= A (- 1)) (>= B 1))) (and (and (= A C) (= B D)) (and (>= A 0) (>= B 0)))))
../../reve-test-suite/build/loop/barthe.smt2: (define-fun INV_MAIN_42 ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int)) Bool (and (and (and (= (+ A (+ (* 5 C) (+ (* 5 E) (- (* (- 5) G) F)))) 0) (= (+ B (- (- G E) C)) 0)) (= D H)) (and (>= B 0) (>= E 0))))
../../reve-test-suite/build/loop/break_single.smt2: (define-fun INV_MAIN_42 ((A Int) (B Int) (C Int) (D Int)) Bool (and (and (= A C) (= B D)) (>= A 0)))
../../reve-test-suite/build/loop/nested-while.smt2: (define-fun INV_MAIN_42 ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int)) Bool false)
../../reve-test-suite/build/loop/fib.smt2: (define-fun INV_MAIN_42 ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int)) Bool (or (or (and (and (and (= (- A D) 1) (= (+ B (- C F)) 0)) (= E F)) (>= A 1)) (and (and (and (= (- A D) 1) (= B 0)) (= C F)) (= E F))) (and (= C F) (and (and (>= (- D A) (- 1)) (<= A 0)) (<= D 0)))))
